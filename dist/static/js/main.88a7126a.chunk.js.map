{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SingIn.js","components/auth/SingUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","firebase","getFirebase","auth","then","logout","type","props","className","to","href","onClick","profile","initials","SignedOutLinks","state","console","log","links","uid","Notifications","notifications","projects","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createDat","toString","calendar","ProjectList","Dashboard","this","Component","compose","firestore","ordered","notification","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SingIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SingUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","getFirebasee","authorId","add","Date","App","exact","path","component","Dasboard","ProjectDetails","SignIn","SignUp","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.88a7126a.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n  //this.props <- don't work in functional componennt\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Projec</NavLink>\r\n      </li>\r\n      <li>\r\n        <a href=\"#\" onClick={props.signOut}>\r\n          Logout\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        firebase.logout();\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    // That will do async connection with firebase\r\n    // and that will create user with given email and\r\n    // password thanks to function createUserWith...()\r\n    // \"then\"  firesup if action above \"then\" complete.\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp) => {\r\n        //create new doc with uid created in above sentence\r\n        return firestore\r\n          .collection('users')\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0],\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err });\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLInks from './SignedInLinks';\r\nimport SignedOutLInks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  //console.log(auth);\r\n\r\n  //if auth.uid is true then display SignedInLinks if not, then\r\n  //display SingedOutLinks\r\n  const links = auth.uid ? (\r\n    <SignedInLInks profile={profile} />\r\n  ) : (\r\n    <SignedOutLInks />\r\n  );\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          Socer Stats\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Navbar);\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications, projects } = props;\r\n  console.log('dupa ' + notifications);\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {/* if notifications array is zero don't iterate elements*/}\r\n            {notifications &&\r\n              notifications.map((item) => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"pink-text\">{item.user} </span>\r\n                    <span>{item.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          Posted by {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(project.createDat.toDate().toString()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {/* That sentence bottom mean: if we have projects then do maping, if\r\n    we don't have projects don't do maping  */}\r\n      {projects &&\r\n        projects.map((project) => {\r\n          return (\r\n            <Link to={'/project/' + project.id} key={project.id}>\r\n              <ProjectSummary project={project} key={project.id} />;\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    // console.log(this.props);\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          {/*12 column on small screen and 6 column on medium*/}\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          {/*leave gap on the medium screen beetwen that two divs*/}\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications projects={projects} notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notification,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createDat', 'desc'] },\r\n    { collection: 'notification', limit: 3, orderBy: ['time', 'desc'] },\r\n  ])\r\n)(Dashboard);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n  //extract destruct project frome the props\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>\r\n              Posted by {project.authorFirstName} {project.authorLastName}\r\n            </div>\r\n            <div>\r\n              {moment(project.createDat.toDate().toString()).calendar()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>loading project...</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: 'projects' }])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport class SingIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      //whatever target element will change, we update the value\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingIn);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nexport class SingUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      //whatever target element will change, we update the value\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              {/*if error exist output it*/}\r\n              {/*This is all going from firebase, \r\n              attaching to are state and then output to our component*/}\r\n              {authError ? <p> {authError} </p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingUp);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport class CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      //whatever target element will change, we update the value\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create new project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebasee, getFirestore }) => {\r\n    // make async call to database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n\r\n    firestore\r\n      .collection('projects')\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createDat: new Date(),\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'CREATE_PROJECT', project });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Dasboard from './components/dashboard/Dashboard';\r\nimport ProjectDetails from './components/projects/ProjectDetails';\r\nimport SignIn from './components/auth/SingIn';\r\nimport SignUp from './components/auth/SingUp';\r\nimport CreateProject from './components/projects/CreateProject';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Dasboard} />\r\n          <Route path=\"/project/:id\" component={ProjectDetails} />\r\n          <Route path=\"/signin\" component={SignIn} />\r\n          <Route path=\"/signup\" component={SignUp} />\r\n          <Route path=\"/create\" component={CreateProject} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initState = {\r\n  authError: null,\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed',\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return {};\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success');\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error');\r\n      return {\r\n        ...state,\r\n        authError: action.err.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n    { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\r\n    { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' },\r\n  ],\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log('created project', action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error', action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: 'AIzaSyC0u48X1s1045ezKSTPyqq-BbY6jISj4Wc',\r\n  authDomain: 'suchy-plan.firebaseapp.com',\r\n  databaseURL: 'https://suchy-plan.firebaseio.com',\r\n  projectId: 'suchy-plan',\r\n  storageBucket: 'suchy-plan.appspot.com',\r\n  messagingSenderId: '186854701879',\r\n  appId: '1:186854701879:web:e93cf272c78cb759cd38b2',\r\n};\r\n// Initialize Firebase\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({});\r\n\r\nexport default firebase;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\r\nimport firebaseConfig from './config/firebaseConfig';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reduxFirestore(firebaseConfig),\r\n    reactReduxFirebase(firebaseConfig, {\r\n      useFirestoreForProfile: true,\r\n      userProfile: 'users',\r\n      attachAuthIsReady: true,\r\n    })\r\n  )\r\n);\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n  );\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}